import "./sass/dark.sass";

import React from "react";
import ReactDOM from "react-dom";

import {QueryClient, QueryClientProvider} from "react-query";
import {storesURL} from "./cheapshark/stores";
import {Store} from "./cheapshark/stores/stores";
import {StoresContext} from "./types";
import {App} from "./App";
import {BrowserRouter} from "react-router-dom";


async function main() {
    const queryClient = new QueryClient()
    const stores = await queryClient.fetchQuery([storesURL, undefined], async () => await fetch(storesURL).then(async x => await x.json() as Store[]))
    ReactDOM.render(
        <React.StrictMode>
            <QueryClientProvider client={queryClient}>
                <StoresContext.Provider value={stores}>
                    <BrowserRouter>
                        <App/>
                    </BrowserRouter>
                </StoresContext.Provider>
            </QueryClientProvider>
        </React.StrictMode>,
        document.getElementById("root")
    )
}


const happy = " _                               _                       _    _         _     \n" +
    "| |                             | |                     | |  | |       | |    \n" +
    "| |__   __ _ _ __  _ __  _   _  | |__   __ _ _ __  _   _| | _| | ____ _| |__  \n" +
    "| '_ \\ / _` | '_ \\| '_ \\| | | | | '_ \\ / _` | '_ \\| | | | |/ / |/ / _` | '_ \\ \n" +
    "| | | | (_| | |_) | |_) | |_| | | | | | (_| | | | | |_| |   <|   < (_| | | | |\n" +
    "|_| |_|\\__,_| .__/| .__/ \\__, | |_| |_|\\__,_|_| |_|\\__,_|_|\\_\\_|\\_\\__,_|_| |_|\n" +
    "            | |   | |     __/ |                                               \n" +
    "            |_|   |_|    |___/                                                "
const amongosList = [
    "⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄\n" +
    "⠄⠄⠄⠄⠄⠄⠄⣀⣀⣐⡀⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄\n" +
    "⠄⠄⢠⠄⣠⣶⣿⣿⣿⠿⠿⣛⣂⣀⣀⡒⠶⣶⣤⣤⣬⣀⡀⠄⢀⠄⠄⠄⠄⠄⠄⠄\n" +
    "⠄⠄⢀⣾⣿⣿⣿⡟⢡⢾⣿⣿⣿⣿⣿⣿⣶⣌⠻⣿⣿⣿⣿⣷⣦⣄⡀⠄⠄⠄⠄⠄\n" +
    "⠄⠄⣈⣉⡛⣿⣿⣿⡌⢇⢻⣿⣿⣿⣿⣿⠿⠛⣡⣿⣿⣿⣿⣿⣿⣿⣿⣦⣄⠄⠄⠄\n" +
    "⠄⠺⠟⣉⣴⡿⠛⣩⣾⣎⠳⠿⠛⣋⣩⣴⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣆⠄⠄\n" +
    "⠄⠄⠄⠘⢋⣴⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡆⠄\n" +
    "⠄⠄⢀⢀⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡇⠄\n" +
    "⠄⠄⠄⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠃⣀\n" +
    "⠄⠄⠄⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⠃⠘⠛\n" +
    "⠄⠄⠄⢻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠟⠋⣀⣀⣠⣤\n" +
    "⠄⠄⣀⣀⡙⠻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠿⢛⣩⠤⠾⠄⠛⠋⠉⢉\n" +
    "⠄⠺⠿⠛⠛⠃⠄⠉⠙⠛⠛⠻⠿⠿⠿⠟⠛⠛⠛⠉⠁⠄⠄⣀⣀⣠⣤⣠⣴⣶⣼⣿",
    "⣿⣿⣿⣿⣿⣿⣿⣿⠿⠛⠋⠉⠉⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠉⠛⠿⣿⣿⣿\n" +
    "⣿⣿⣿⣿⣿⣿⠏⠀⢠⣦⡀⣤⣠⡄⢠⠦⡄⣠⠤⠀⣤⠀⡆⣤⣶⡀⠀⠈⠻⣿\n" +
    "⣿⣿⣿⣿⣿⣿⠀⠀⠟⠻⠃⠏⠉⠇⠸⠶⠋⠻⠾⠇⠙⠒⠃⠘⠾⠃⠀⠀⢀⣿\n" +
    "⣿⣿⣿⣿⣿⣿⣷⣤⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣀⣠⣴⣿⣿\n" +
    "⣿⣿⣿⣿⣿⣿⣿⠿⠿⠿⠿⠷⣶⣶⣶⣶⣶⡆⢀⣴⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿\n" +
    "⣿⣿⣿⣿⠟⠉⠀⠀⠒⠀⠀⠀⠀⠉⢻⣿⣿⣷⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿\n" +
    "⣿⣿⣿⣿⠀⠀⠀⠦⣀⣶⡶⠀⢤⣠⣤⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿\n" +
    "⣿⣿⣿⣿⣷⣤⣀⡲⠶⣶⣤⣔⣀⣤⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿\n" +
    "⣿⣿⣿⣿⣿⠿⠿⠃⠈⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿\n" +
    "⣿⣿⣿⠏⢀⠤⠄⠀⠀⢀⡈⢹⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿\n" +
    "⣿⣿⡟⠀⠸⠦⣠⠘⠁⢨⠃⢸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿\n" +
    "⣿⣿⠃⠀⠑⠤⠤⠔⠚⢥⣤⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿\n" +
    "⣿⡿⠀⠀⠀⣀⣀⡀⠀⢸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿\n" +
    "⣿⡇⠀⠀⣰⣿⣿⣿⠀⢸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿\n" +
    "⣿⣧⣀⡀⠉⣻⣿⣧⣤⣤⣤⣤⣽⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿",
    "⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⢟⣻⣯⣽⣟⠿⠟⠛⠛⠻⠿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿\n" +
    "⣿⣿⣿⣿⣿⣿⣿⡿⣫⣾⣿⣿⣿⡹⢁⣴⣷⣿⣿⣷⣆⣤⡀⠠⢬⣉⠻⣿⣿⣿⣿⣿⣿⣿⣿\n" +
    "⣿⣿⣿⣿⣿⣿⣿⢱⣿⣿⣿⠿⠩⢠⣿⣿⣿⣿⣿⣏⣿⢸⣿⡖⣄⠹⣷⡌⢿⣿⣿⣿⣿⣿⣿\n" +
    "⣿⣿⣿⣿⣿⣿⣿⡸⣿⣿⣿⣼⠂⢸⣿⣿⣾⠯⢟⠋⠿⣿⡿⣳⡿⣳⣿⣷⡈⢿⣿⣿⣿⣿⣿\n" +
    "⣿⣿⣿⣿⣿⣿⣿⣷⣌⡻⣿⢡⣿⡀⢻⣿⣿⣷⣭⣯⡆⢰⣤⣥⣶⣿⣿⣿⣷⠈⣿⣿⣿⣿⣿\n" +
    "⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⢃⣿⣿⣿⣤⡈⠛⠛⠙⠛⠁⣸⣿⣿⣿⣿⣿⡿⠉⣤⣤⡉⢻⣿⣿\n" +
    "⣿⣿⣿⣿⣿⠿⠛⢋⣉⣁⣈⣉⣀⣈⣉⣉⣉⣁⡐⠚⣿⣿⣿⣿⣿⣿⣿⡇⢸⣿⣿⣿⡀⢿⣿\n" +
    "⣿⣿⣿⠏⣴⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣆⠈⢿⣿⣿⣿⣿⣿⡇⢸⣿⣿⣿⡇⢸⣿\n" +
    "⣿⣿⣿⢀⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡀⢸⣿⣿⣿⣿⣿⡇⢸⣿⣿⣿⡇⢸⣿\n" +
    "⣿⣿⡟⢸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡇⢸⣿⣿⣿⣿⣿⡇⢸⣿⣿⣿⠇⣸⣿\n" +
    "⣿⣿⣧⠈⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡇⣸⣿⣿⣿⣿⣿⣧⡈⠛⠿⠋⢠⣿⣿\n" +
    "⣿⣿⣿⠀⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠀⣿⣿⣿⣿⣿⣿⣿⣿⡇⢰⣾⣿⣿⣿\n" +
    "⣿⣿⣿⠀⢻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡇⠀⣿⣿⣿⣿⣿⣿⣿⣿⡇⢸⣿⣿⣿⣿\n" +
    "⣿⣿⣿⣆⠘⠿⠛⠛⠛⠛⠛⠛⠛⠛⠛⠛⠛⠛⠋⠀⣰⣿⣿⣿⣿⣿⣿⣿⣿⡇⢸⣿⣿⣿⣿\n" +
    "⣿⣿⣿⠋⣠⣶⣶⣶⣶⣶⣶⠂⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡇⠀⣿⣿⣿⣿\n" +
    "⣿⣿⠃⣰⣿⣿⣿⣿⣿⣿⡇⢸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣧⠀⣿⣿⣿⣿\n" +
    "⣿⡏⠀⣿⣿⣿⣿⣿⣿⣿⡇⠸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠀⣿⣿⣿⣿\n" +
    "⣿⣇⠀⣿⣿⣿⣿⣿⣿⣿⣧⠀⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠀⣸⣿⣿⣿\n" +
    "⣿⣿⡀⢻⣿⣿⣿⣿⣿⣿⣿⣆⠈⠻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡄⢸⣿⣿⣿\n" +
    "⣿⣿⣷⣄⠙⠿⣿⣿⣿⣿⣿⣿⣷⣄⠈⠛⠻⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡇⣸⣿⣿⣿\n" +
    "⣿⣿⣿⣿⣷⡄⢀⣉⣩⣿⣿⣿⠋⢠⣄⣀⣀⣀⣀⡀⢶⣿⣿⣿⣿⣿⣿⣿⣿⡏⢁⣿⣿⣿⣿\n" +
    "⣿⣿⣿⣿⣿⣧⠈⣿⣿⣿⣿⣿⠀⣼⣿⣿⣿⣿⣿⣷⡈⠻⣿⣿⣿⣿⣿⣿⡿⢁⣼⣿⣿⣿⣿\n" +
    "⣿⣿⣿⣿⣿⣿⣆⠘⣿⣿⡿⠃⣰⣿⣿⣿⣿⣿⣿⣿⣷⣦⡀⠉⠛⠻⠿⠏⣠⣾⣿⣿⣿⣿⣿\n" +
    "⣿⣿⣿⣿⣿⣿⣿⣦⣈⠉⢀⣴⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣶⣶⣶⣿⣿⣿⣿⣿⣿⣿⣿"
]

const importantMessages = [
    happy,
    amongosList[Math.floor(Math.random() * amongosList.length)]
]
main().then(() => {
    for (const message of importantMessages) {
        //console.log("%c" + message, "font-family:monospace")
    }
})